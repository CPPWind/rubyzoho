Travis CI - YRI 1.9.x

{<img src="https://travis-ci.org/amalc/rubyzoho.png?branch=master" alt="Build Status" />}[https://travis-ci.org/amalc/rubyzoho]

= rubyzoho

Abstracting Zoho's API into a set of Ruby classes, with reflection of Zoho's fields using a more familiar
ActiveRecord lifecycle but without ActiveRecord.

== Install
    gem install rubyzoho

== Configure
Put the following in an initializer (e.g. zoho.rb):

    RubyZoho.configure do |config|
      config.api_key = '<< API Key from Zoho>>'
    end

Please be aware that Zoho limits API calls. So running tests repeatedly will quickly exhaust
your daily allowance.


== Use
RubyZoho attempts to follow the ActiveRecord lifecycle, i.e. new, save and delete
at this point.

To get a list of supported attributes for a Zoho CRM contact:

    require 'ruby_zoho'

    c = RubyZoho::Crm::Contact.new
    c.attr_writers  # => Give a list of updatable attributes
    c.fields # => Hash of all fields

Attributes are reflected from the current API instance of Zoho, dynamically on
initialization of the API, when the RubyZoho.configure block is called. This
includes custom fields.

Another example:

    l = RubyZoho::Crm::Lead.new
    l.attr_writers  # => Give a list of updatable attributes
    l.fields # => Hash of all fields

To retrieve an existing record:

    l = RubyZoho::Crm::Lead.find_by_email('email@domain.com')

Returns one or more records matching the query. The find_by_<attribute> follows
ActiveRecord style reflections, so if the attribute is present in the API, it can
be queried. There is currently a single attribute limitation imposed by the Zoho 
API. Note, what is returned is an Array class. Use subscripts at this point to access
or iterate through the returned set of records.

Equality is the only match currently supported.

To get a list of all accounts:

    a = RubyZoho::Crm::Account.all
    a.each do |account|
      pp account.account_name
    end

Or for all quotes:

    q = RubyZoho::Crm::Quote.all
    q.each do |quote|
      pp quote.subject
      pp quote.quote_name
    end

To get the first quote:
    q.first

Or the last one:
    q.last

Since the result is Enumerable:
    q.map { |m| m.last_name }
works.

To create a new record:

    c = RubyZoho::Crm::Contact.new(
      :first_name => 'First Name',
      :last_name => 'Last Name',
      :email => 'email@domain.com',
      etc.
    )
    c.save
    r = RubyZoho::Crm::Contact.find_by_email('email@domain.com')
    r[0].contactid # => Has the newly created contact's ID


To add a contact to an existing account:

    a = RubyZoho::Crm::Account.find_by_account_name('Very Big Account')
    c = RubyZoho::Crm::Contact.new(
      :first_name => 'First Name',
      :last_name => 'Last Name',
      :email => 'email@domain.com',
      :account_name => a[0].account_name,
      :accountid => a[0].accountid  # accountid instead of account_id because of Zoho's convention
      etc.
    )
    c.save


Objects currently supported are:
    RubyZoho::Crm::Account
    RubyZoho::Crm::Contact
    RubyZoho::Crm::Lead
    RubyZoho::Crm::Potential
    RubyZoho::Crm::Quote


==Bugs and Enhancments
Please open an issue on GitHub. Or better yet, send in a pull request.

---

== Contributing to rubyzoho

* Pull requests with unit tests or specs and a version branch are welcomed.
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet.
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it.
* Fork the project.
* Start a feature/bugfix branch.
* Commit and push until you are happy with your contribution.
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2013 amalc. Released under the MIT license. See LICENSE.txt for
further details.

